
var app = require('express')();
var http = require('http').Server(app);
var io = require('socket.io')(http);
var userData = [];
var count = 0;


app.get('/', function(req, res){res.sendFile(__dirname +'/index.html');});
app.get('/jquery.js', function(req,res){res.sendFile(__dirname + '/jquery.js');});
app.get('/scrollglue.js', function(req,res){res.sendFile(__dirname + '/js/scrollglue.js');});
app.get('/chat.js', function(req,res){res.sendFile(__dirname + '/js/chat.js');});
app.get('/chatAppController.js', function(req,res){res.sendFile(__dirname + '/js/chatAppController.js');});
app.get('/angular.js', function(req,res){res.sendFile(__dirname + '/js/angular.js');});
app.get('/angular.min.js.map', function(req,res){res.sendFile(__dirname + '/js/angular.min.js.map');});
app.get('/site.js', function(req,res){res.sendFile(__dirname + '/js/site.js');});
app.get('/site.css', function(req,res){res.sendFile(__dirname + '/css/site.css');});
app.get('/bootstrap.css', function(req,res){res.sendFile(__dirname + '/css/bootstrap.min.css');});
app.get('/chatIcon', function(req, res){res.sendFile(__dirname +'/images/bubble.png');});
app.get('/notificationSound', function(req, res){res.sendFile(__dirname +'/clash_of_clans_intro.mp3');});


io.on('connection', function(socket){
  socket.emit('callBackConnect', {'UserLists':userData});

  /*
  socket.on('chatMessage', function(data){
  	var userID = data.UserID;
  	var msg = data.Message;
  	var username = userData[userID]['Username'];
    io.emit('chatMessage', username+': ' + msg);
  });*/
  
  socket.on('sendPrivateMessage',function(recipientID, senderID, message){
    
    for(var i=0;i<userData[recipientID]['SessionID'].length;i++){
      var sessionID = userData[recipientID]['SessionID'][i];
      io.to(sessionID).emit('callBackPrivateMessage',senderID,message);
    }
  });

  socket.on('login', function(data){

    var fName = data.firstName;
    var lName = data.lastName;
    var initials = data.initials;
    var dpColor = data.dpColor;
    var uID = findUsername(fName, lName);
    if(!uID){
      count++;
      userData[count] = {'ID':count,'firstName':fName, 'lastName':lName,'initials':initials, 
        'dpColor':{'background-color':dpColor}, 
        'SessionID':[socket.id],
        'Status':1, 'ChatSessionStatus':true,
        'ChatMessages':[],
        'Txt':''
      };
      socket.emit('callBackLogin', {'UserID':count, 'UserLists':userData});
      socket.broadcast.emit('broadCastNewUsers', userData[count]);
      //console.log(userData);
    }else{
      //io.emit('broadCastNewUsers', {'UserID':uID, 'UserLists':userData});
      userData[uID]['SessionID'].push(socket.id);
      userData[uID]['Status']=1;
      socket.emit('callBackLogin', {'UserID':uID, 'UserLists':userData});
      socket.broadcast.emit('broadCastNewUsers', userData[uID]);
    }
  //console.log(userData);

  });

  socket.on('disconnect',function(data){
    //var socketList = io.sockets.server.eio.clients;

    //console.log(socketList);

      var id = getIDBySessionID(socket.id);
      
      if(id){
        userData[id]['Status']=0;
        socket.broadcast.emit('broadCastNewUsers', userData[id]);
      }

    
  });

  function getIDBySessionID(sessionID){
    var returnValue=false;

    for(var i=1;i<=count;i++){

      var user = userData[i];
      var arrSessionID = user['SessionID'];
      var id = user['ID'];
      for(var z=0;z<arrSessionID.length;z++){
        var sID = arrSessionID[z];
        if(sID==sessionID){
          returnValue=id;
          break;
        }
      }
    }
    
    return returnValue;

  }

  function findUsername(firstName, lastName){
    var returnValue=false;
    for(var i=1;i<=count;i++){
      var data = userData[i];
      if(data['firstName']==firstName && data['lastName']==lastName){
        returnValue = i;
        break;
      }else{
        returnValue = false;
      }
    }
    return returnValue;

  }

});




http.listen(3000, function(){
  console.log('listening on *:3000');
});

